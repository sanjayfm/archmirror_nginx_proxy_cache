user http;
worker_processes  1;

error_log  /var/log/nginx/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
	    worker_connections  1024;
}


http
{
    # nginx may need to resolve domain names at run time
    resolver 8.8.8.8 8.8.4.4 ipv6=off;


    log_format main '$remote_addr - $upstream_cache_status [$time_local] $request_method $host$request_uri $server_protocol $status $body_bytes_sent $request_time $upstream_response_time';
    access_log  /var/log/nginx/access.log  main;


    proxy_cache_path /var/http/pacman-cache 
	    levels=1:2 keys_zone=pacman-cache:10m 
	    inactive=60d use_temp_path=off max_size=10g;

    # Pacman Cache
    server
    {
        listen      8000;
    
        # Requests for package db and signature files should redirect upstream without caching
        location ~ \.(db|sig)$ {
            proxy_pass http://mirrors$request_uri;
        }

        # Requests for actual packages should be served directly from cache if available.
        #   If not available, retrieve and save the package from an upstream mirror.
        location ~ \.tar\.xz$ {
	    proxy_cache pacman-cache;
	    slice              500k;
	    proxy_cache_key    $host$uri$is_args$args$slice_range;
	    proxy_set_header   Range $slice_range;
	    proxy_http_version 1.1;
	    proxy_cache_valid  200 206 1h;
            proxy_pass          http://mirrors$request_uri;
	    proxy_next_upstream error timeout http_404;
        }
    }

    # Upstream Arch Linux Mirrors
    # - Configure as many backend mirrors as you want in the blocks below
    # - Servers are used in a round-robin fashion by nginx
    # - Add "backup" if you want to only use the mirror upon failure of the other mirrors
    # - Separate "server" configurations are required for each upstream mirror so we can set the "Host" header appropriately
    upstream mirrors {
        server localhost:8001;
        server localhost:8002 backup;
        server localhost:8003 backup;
    }

    # Arch Mirror 1 Proxy Configuration
    server
    {
        listen      8001;
        server_name localhost;

        location / {
            proxy_pass       http://archlinux.c3sl.ufpr.br$request_uri;
            proxy_set_header Host archlinux.c3sl.ufpr.br;
        }
    }

    # Arch Mirror 2 Proxy Configuration
    server
    {
        listen      8002;
        server_name localhost;

        location / {
            proxy_pass       http://archlinux.pop-es.rnp.br$request_uri;
            proxy_set_header Host archlinux.pop-es.rnp.br;
        }
    }

    # Arch Mirror 3 Proxy Configuration
    server
    {
        listen      8003;
        server_name localhost;

        location / {
            proxy_pass       http://arch-mirror.wtako.net$request_uri;
            proxy_set_header Host arch-mirror.wtako.net;
        }
    }
}
